version: '3.8'

services:
    gateway:
        build:
            dockerfile: Dockerfile
            context: ./gateway
            target: development
        restart: always
        volumes:
          - ./gateway:/var/www/gateway
        command: npm run start:dev
        env_file:
            - .env
        ports:
            - ${API_GATEWAY_PORT}:${API_GATEWAY_PORT}
        networks:
            - backend
        depends_on:
            - media
            - live
            - token
            - user

    media:
        build:
            dockerfile: Dockerfile
            context: ./media
            target: development
        restart: always
        volumes:
          - ./media:/var/www/media
        command: npm run start:dev
        env_file:
            - .env
        ports:
            - ${MEDIA_SERVICE_PORT}:${MEDIA_SERVICE_PORT}
        networks:
            - backend

    live:
        build:
            dockerfile: Dockerfile
            context: ./live
            target: development
        restart: always
        volumes:
          - ./live:/var/www/live
        command: npm run start:dev
        env_file:
            - .env
        ports:
            - ${LIVE_SERVICE_PORT}:${LIVE_SERVICE_PORT}
        networks:
            - backend

    token:
        build:
            dockerfile: Dockerfile
            context: ./token
            target: development
        restart: always
        volumes:
          - ./token:/var/www/token
        command: npm run start:dev
        env_file:
            - .env
        ports:
            - ${TOKEN_SERVICE_PORT}:${TOKEN_SERVICE_PORT}
        networks:
            - backend

    user:
        build:
            dockerfile: Dockerfile
            context: ./user
            target: development
        restart: always
        volumes:
          - ./user:/var/www/user
        command: npm run start:dev
        env_file:
            - .env
        ports:
            - ${USER_SERVICE_PORT}:${USER_SERVICE_PORT}
        networks:
            - backend

    front:
        build:
            dockerfile: Dockerfile
            context: ./front
            target: development
        user: "1000"
        restart: always
        volumes:
            - ./front:/var/www/front
            - /var/www/front/node_modules
        command: npm run dev
        env_file:
            - .env
        ports:
            - ${FRONT_SERVICE_PORT}:${FRONT_SERVICE_PORT}
        networks:
            - frontend

networks:
    backend:
        driver: bridge
    frontend:
        external: true
        name: infrastructure

volumes:
    gateway:
    media:
    live:
    token:
    redis: